/*
 * enum.h
 *
 * Created: 18.07.2018 14:40:33
 *  Author: Andrew
 */ 


#ifndef ENUM_H_
#define ENUM_H_

enum FLASH_fifo{
	FIFO_LIMIT=0x08,
	//FLASH_BUSY_LIMIT=10,
	NO_FLASH_ERROR=(unsigned char)0x00,
	FLASH_ERROR_0=0x81,
	FLASH_ERROR_1=0x82,
	FLASH_ERROR_2=0x83,
	FLASH_ERROR_3=0x84,
	FLASH_ERROR_4=0x85,
	FLASH_ERROR_5=0x86,
	FLASH_ERROR_6=0x87,
	FLASH_ERROR_7=0x88,
	FLASH_ERROR_8=0x89,
	FLASH_ERROR_9=0x8a,
	PAGE_ADRESS_WRONG = (unsigned char)0x01,
	BUF_ADRESS_WRONG = (unsigned char)0x02,
	PAGE_TO_BUF_WRONG = (unsigned char)0x03,
	WRITE_ERROR = (unsigned char)0x04,
	FLASH_IS_BUSY = (unsigned char)0x05,
	PAGE_TO_BUF_TIMEOUT = (unsigned char)0x06,
	PAGE_ADRESS_WRONG_R  = (unsigned char)0x07,
	BUF_ADRESS_WRONG_R = (unsigned char)0x08,
	READ_ERROR = (unsigned char)0x09,
	FLASH_IS_BUSY_R= (unsigned char)0x0a,
	COMPARE_IS_GOOD=(unsigned char)0x0b,
	COMPARE_IS_NOT_GOOD=(unsigned char)0x0c,
	CRC_READ_ERROR=(unsigned char)0x0d,
	TIMEOUT_READ_ERROR=(unsigned char)0x0e,
	NUM_FRAME_OR_PRG_TOO_BIG_W=(unsigned char)0x0f,
	NUM_FRAME_OR_PRG_TOO_BIG_R=(unsigned char)0x10,
	BUSY=(unsigned char)0x11,
	READY=(unsigned char)0x12,
	TIMEOUT_ERASE_ERROR=(unsigned char)0x13,
	WRITE_INSERT_ERROR=(unsigned char)0x14,
	GHANGE_MODE_TO_REPLACE=(unsigned char)0x15,
	TIMEOUT_WRITE_TO_BUF1_ERROR=(unsigned char)0x16,
	TIMEOUT_TRANSFER_ERROR=(unsigned char)0x17,
	TIMEOUT_CYCLE_WAIT_ERASE=(unsigned char)0x18,
	TIMEOUT_CYCLE_WAIT_READ_PAGE=(unsigned char)0x19,
	PAGE_LIMIT_EXCEED=(unsigned char)0x1a,
	WRITE_BUF1_TO_PAGE_ERR=(unsigned char)0x1b,
	TRANSFER_DATA_TO_BUF1_ERR=(unsigned char)0x1c,
	INSERT_MISTAKE=(unsigned char)0x1d,
	FULL_CHIP_ERASE_TIMEOUT=(unsigned char)0x1e,
	TIMEOUT_CYCLE_WAIT_ERASE_FIRST=(unsigned char)0x1f,
	NOT_EMPTY=(unsigned char)0x20,
	INSERT_FRAME_TO_PROGRAMM_NOT_ALLOWED=(unsigned char)0x21,
	INSERT_FRAME_TO_FUNCTION_NOT_ALLOWED=(unsigned char)0x22,
	PAGE_LIMIT_EXCEED_LAST=(unsigned char)0x23,
	END_CHECK_ERASE_WRITE=(unsigned char)0x24,
	PAGE_ADRESS_WRONG_DELETE=(unsigned char)0x25,
	FLASH_IS_BUSY_DELETE=(unsigned char)0x26,
	TIMEOUT_ERASE_ERROR_DELETE=(unsigned char)0x27,
	ERROR_CHECK_ONES=(unsigned char)0x28,
	ERROR_CHECK_31_32=(unsigned char)0x29,
	NUM_PRG_TOO_BIG_D=(unsigned char)0x30,
	I_GREATER_OR_EQUEL_EMPTY_PLACE=(unsigned char)0x31,
	FRAME_IS_ABSENT=(unsigned char)0x32,
	DELETE_ONE_FRAME_SUCSESS=(unsigned char)0x33,
	DELETE_ONE_FRAME_ERROR=(unsigned char)0x34,
	TRANSMITER_TIMEOUT_WHEN_FRAME_IS_READ=(unsigned char)0x34,
	FIRST_BYTE_ERROR_=(unsigned char)0x35,
	LENGTH_STREAM_BUFFER_OVERFLOW_=(unsigned char)0x36,
	LENGTH_STREAM_TIMEOUT_=(unsigned char)0x37,
	LENGTH_ONES_ERROR_=(unsigned char)0x38,
	MAIN_STREAM_BUFFER_OVERFLOW_=(unsigned char)0x39,
	MAIN_STREAM_TIMEOUT_=(unsigned char)0x3a,
	MAIN_ONES_ERROR_=(unsigned char)0x3b,
	UNKNOWN_FLASH_FIFO=(unsigned char)0x3c,
	BYTE_IS_NOT_85=(unsigned char)0x3d,
	WRITE_PAGE_OK=(unsigned char)0x3e,
	WRITE_PAGE_ERROR=(unsigned char)0x3f,
	TIMEOUT_TRANSFER_TO_BUF=(unsigned char)0x40,
	TRANSMITER_TIMEOUT_COMP_LINK=(unsigned char)0x41,
	TIMEOUT_READ_FROM_BUF1_ERROR=(unsigned char)0x42,
	CHECK_ERROR=(unsigned char)0x43,
	TIMEOUT_CYCLE_WAIT_WRITE=(unsigned char)0x44,
	TIMEOUT_CYCLE_WAIT_COMPARE=(unsigned char)0x45,
	CHECK_BUFFER_PAGE_ERROR=(unsigned char)0x46,
	CHECK_EPE_ERROR=(unsigned char)0x47,
	TRANSMITER_TIMEOUT_WHEN_EEPROM_IS_READ=(unsigned char)0x48,
	EEPROM_WRITE_ERROR=(unsigned char)0x49,
	EEPROM_RECIEVE_ERROR=(unsigned char)0x4a,
	FIRST_BYTE_ERROR_OVERFLOW_=(unsigned char)0x4b,
	FIRST_BYTE_ERROR_FRAME_=(unsigned char)0x4c,
	ADDRESS_TO_WRITE_TO_FLASH_TOO_BIG=(unsigned char)0x4d,
	PAGE_FLASH_BUFFER_IS_NOT_READY=(unsigned char)0x4e,
	TIMEOUT_PAGE_FLASH_WRITE=(unsigned char)0x4f,
	CHECK_ONES_WHEN_PAGE_FLASH_IS_WRITTEN=(unsigned char)0x50,
	CAN_GO_TO_ZERO=(unsigned char)0x51,
	UNKNOWN_ERROR_USB_TRAFFIC=(unsigned char)0x52,
	WRITE=255,
	READ=254,
};

enum usb_read_write{
	PROGRAMM_=(char)0x00,
	FUNCTION_=(char)0x01,
	READ_=(char)0x02,
	WRITE_=(char)0x03,
	EEPROM_READ_BIN=(char)0x04,
	EEPROM_WRITE_BIN=(char)0x05,
	EEPROM_WRITE_BIN_ERROR=(char)0x06,
	TEST_=(char)0x55,
	WRITE_CHECK_ONES=(char)0x3c,
	SET_TIME = (char)0x07,
	//17.04.2018 read correction
	READ_CORRECTION=(char)0x08,
	SAVE_CORRECTION =(char)0x09,
	CORRECTION_PLUS=(char)0x0a,
	CORRECTION_MINES=(char)0x0b,
};


#endif /* ENUM_H_ */